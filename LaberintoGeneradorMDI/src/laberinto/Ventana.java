package laberinto;

import arbol.NodoArbol;
import laberinto.LaminaLaberinto;
import datos.InfoMovimiento;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jeremias Reyes, Leandro Navarrete, Hernan Escalante
 */
public class Ventana extends javax.swing.JFrame {
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        this.setLocation(400, 100);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGenerar = new javax.swing.JButton();
        btnSolucion = new javax.swing.JButton();
        spnCantColumnas = new javax.swing.JSpinner();
        lblColumnas = new javax.swing.JLabel();
        btnSolucionar = new javax.swing.JButton();
        panelLaberinto = new laberinto.LaminaLaberinto();
        btnInfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador Laberintos");
        setIconImage(getIconImage());
        setResizable(false);

        btnGenerar.setBackground(new java.awt.Color(255, 255, 255));
        btnGenerar.setForeground(new java.awt.Color(0, 102, 102));
        btnGenerar.setText("Generar Laberinto");
        btnGenerar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        btnGenerar.setFocusable(false);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnSolucion.setBackground(new java.awt.Color(255, 255, 255));
        btnSolucion.setForeground(new java.awt.Color(0, 102, 102));
        btnSolucion.setText("Solución");
        btnSolucion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        btnSolucion.setFocusable(false);
        btnSolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolucionActionPerformed(evt);
            }
        });

        spnCantColumnas.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        spnCantColumnas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        spnCantColumnas.setFocusable(false);

        lblColumnas.setForeground(new java.awt.Color(0, 102, 102));
        lblColumnas.setText("N° Columnas");
        lblColumnas.setFocusable(false);

        btnSolucionar.setBackground(new java.awt.Color(255, 255, 255));
        btnSolucionar.setForeground(new java.awt.Color(0, 102, 102));
        btnSolucionar.setText("Solucionar");
        btnSolucionar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        btnSolucionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolucionarActionPerformed(evt);
            }
        });
        btnSolucionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSolucionarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelLaberintoLayout = new javax.swing.GroupLayout(panelLaberinto);
        panelLaberinto.setLayout(panelLaberintoLayout);
        panelLaberintoLayout.setHorizontalGroup(
            panelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        panelLaberintoLayout.setVerticalGroup(
            panelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnInfo.setBackground(new java.awt.Color(255, 255, 255));
        btnInfo.setForeground(new java.awt.Color(0, 102, 102));
        btnInfo.setText("Información");
        btnInfo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        btnInfo.setFocusable(false);
        btnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelLaberinto, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(spnCantColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSolucion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSolucionar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenerar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnCantColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnSolucionar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnSolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 173, Short.MAX_VALUE))
                    .addComponent(panelLaberinto, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolucionActionPerformed
        if (this.panelLaberinto.getLaberinto().getArbol().getHojaFin() == null) {
            JOptionPane.showMessageDialog(this, "Para generar una solucion se debe generar un laberinto previamente", "Generador de solucion", JOptionPane.ERROR_MESSAGE);
            return;
        }
        panelLaberinto.setSolucionar(true);
        panelLaberinto.setMovimiento(false);
        this.panelLaberinto.repaint();
    }//GEN-LAST:event_btnSolucionActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        if ((int) this.spnCantColumnas.getValue() < 2) {
            JOptionPane.showMessageDialog(this, "La cantidad de columnas debe ser mayor a 1", "Cantidad de columnas", JOptionPane.ERROR_MESSAGE);
        } else {
            this.panelLaberinto.setSolucionar(false);
            this.panelLaberinto.setLaberinto((int) this.spnCantColumnas.getValue());
            this.panelLaberinto.getLaberinto().generarLaberinto();
            this.panelLaberinto.getDatosMov().actual = panelLaberinto.getLaberinto().getArbol().getRaiz();
            this.panelLaberinto.getDatosMov().i = 0;
            this.panelLaberinto.getDatosMov().j = 0;
            this.panelLaberinto.setMovimiento(false);
            this.panelLaberinto.setJugar(false);
            this.panelLaberinto.repaint();
        }

    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnSolucionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolucionarActionPerformed
        this.panelLaberinto.setDatosMov(new InfoMovimiento(panelLaberinto.getLaberinto().getArbol().getRaiz()));
        panelLaberinto.setSolucionar(false);
        panelLaberinto.setJugar(true);
        panelLaberinto.setMovimiento(false);
        panelLaberinto.repaint();
    }//GEN-LAST:event_btnSolucionarActionPerformed

    private void btnSolucionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSolucionarKeyPressed
        if (panelLaberinto.isJugar() == false) {
            return;
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            if (panelLaberinto.getDatosMov().actual.getEnlaceArriba() == null) {
                if (panelLaberinto.getDatosMov().actual.getAnterior() != null) {
                    if (panelLaberinto.getDatosMov().actual.getAnterior().getEnlaceAbajo() == panelLaberinto.getDatosMov().actual) {
                        panelLaberinto.setMovimiento(true);
                        panelLaberinto.getDatosMov().direccion = "arribaAnt";
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            } else {
                panelLaberinto.setMovimiento(true);
                panelLaberinto.getDatosMov().direccion = "arriba";
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            if (panelLaberinto.getDatosMov().actual.getEnlaceDerecho() == null) {
                if (panelLaberinto.getDatosMov().actual.getAnterior() != null) {
                    if (panelLaberinto.getDatosMov().actual.getAnterior().getEnlaceIzquierdo() == panelLaberinto.getDatosMov().actual) {
                        panelLaberinto.setMovimiento(true);
                        panelLaberinto.getDatosMov().direccion = "izqAnt";
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            } else {
                panelLaberinto.setMovimiento(true);
                panelLaberinto.getDatosMov().direccion = "der";
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            if (panelLaberinto.getDatosMov().actual.getEnlaceIzquierdo() == null) {
                if (panelLaberinto.getDatosMov().actual.getAnterior() != null) {
                    if (panelLaberinto.getDatosMov().actual.getAnterior().getEnlaceDerecho() == panelLaberinto.getDatosMov().actual) {
                        panelLaberinto.setMovimiento(true);
                        panelLaberinto.getDatosMov().direccion = "derAnt";
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            } else {
                panelLaberinto.setMovimiento(true);
                panelLaberinto.getDatosMov().direccion = "izq";
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (panelLaberinto.getDatosMov().actual.getEnlaceAbajo() == null) {
                if (panelLaberinto.getDatosMov().actual.getAnterior() != null) {
                    if (panelLaberinto.getDatosMov().actual.getAnterior().getEnlaceArriba() == panelLaberinto.getDatosMov().actual) {
                        panelLaberinto.setMovimiento(true);
                        panelLaberinto.getDatosMov().direccion = "abajoAnt";
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            } else {
                panelLaberinto.setMovimiento(true);
                panelLaberinto.getDatosMov().direccion = "abajo";
            }
        }
        panelLaberinto.repaint();
        if ((panelLaberinto.getDatosMov().actual == panelLaberinto.getLaberinto().getArbol().getHojaFin().getAnterior() || panelLaberinto.getDatosMov().actual == panelLaberinto.getLaberinto().getArbol().getHojaFin().getEnlaceArriba() || panelLaberinto.getDatosMov().actual == panelLaberinto.getLaberinto().getArbol().getHojaFin().getEnlaceIzquierdo())) {
            JOptionPane.showMessageDialog(this, "Felicidades, has superado el laberinto en " + (panelLaberinto.getDatosMov().cantMovimientos + 1) + " movimientos", "Laberinto superado", JOptionPane.INFORMATION_MESSAGE);
           panelLaberinto.setJugar(false);
           panelLaberinto.setMovimiento(false);
           panelLaberinto.repaint();
        }
        
        
        

    }//GEN-LAST:event_btnSolucionarKeyPressed

    private void btnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoActionPerformed
        // TODO add your handling code here:

        JOptionPane.showMessageDialog(null, "                               Generador de laberintos\nMateria: Metodologia de la investigacion\nAño:"
                + " 2018\nProfesor: Carlos Rodriguez\nIntegrantes: Jeremias Reyes - Leandro Navarrete - Hernan Escalante"
                + "\n");

    }//GEN-LAST:event_btnInfoActionPerformed

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnInfo;
    private javax.swing.JButton btnSolucion;
    private javax.swing.JButton btnSolucionar;
    private javax.swing.JLabel lblColumnas;
    private laberinto.LaminaLaberinto panelLaberinto;
    private javax.swing.JSpinner spnCantColumnas;
    // End of variables declaration//GEN-END:variables
}
